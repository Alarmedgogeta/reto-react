{"version":3,"sources":["normalizr/schemas.js","reducers/index.js","actions/index.js","components/Dropzone.jsx","pages/Home.jsx","components/ActorCard.jsx","components/GoBackButton.jsx","components/MovieCard.jsx","pages/Actor.jsx","pages/NotFound.jsx","routes/App.js","reportWebVitals.js","index.js"],"names":["movie","schema","Entity","actor","known_for","reducer","state","action","normalizedData","type","normalize","payload","entities","current_actor_id","result","movies","loading","error","setLoading","mapDispatchToProps","connect","Dragger","Upload","history","useHistory","draggerProps","name","accept","multiple","headers","Nomada","progress","strokeColor","from","to","percent","status","onChange","info","file","response","message","push","actorName","className","InboxOutlined","size","Home","ActorCard","cover","gender","rating","width","height","src","title","bodyStyle","display","flexDirection","alignItems","justifyContent","headStyle","fontSize","fontWeight","textAlign","style","maxHeight","GoBackButton","icon","ArrowLeftOutlined","onClick","goBack","id","console","log","overview","poster_path","date","release_date","grade","vote_average","newGrade","Math","round","extra","disabled","allowHalf","defaultValue","Date","toLocaleDateString","API_URL","deserializeActor","setError","useParams","hasActor","Object","keys","length","fetchActor","a","fetch","json","data","results","useEffect","profile_path","popularity","map","iconProps","fill","margin","NotFound","ExclamationCircleTwoTone","MehTwoTone","Header","Layout","Content","Footer","App","minHeight","theme","mode","defaultSelectedKeys","Item","exact","path","component","Actor","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88e216fb.chunk.js","sourcesContent":["import { schema } from 'normalizr';\r\n\r\n// Define movie schema\r\nexport const movie = new schema.Entity('movies');\r\n\r\n// Define actor shema\r\nexport const actor = new schema.Entity('actor', { known_for: [movie] });\r\n","import { normalize } from 'normalizr';\r\nimport { actor } from '../normalizr/schemas';\r\n\r\nconst reducer = (state, action) => {\r\n    let normalizedData;\r\n    switch (action.type) {\r\n        case 'DESERIALIZE_ACTOR':\r\n            normalizedData = normalize(action.payload, actor);\r\n            return {\r\n                ...state,\r\n                ...normalizedData.entities,\r\n                current_actor_id: normalizedData.result,\r\n            };\r\n        case 'SET_ACTOR':\r\n            return {\r\n                ...state,\r\n                actor: action.payload,\r\n            };\r\n        case 'SET_MOVIES':\r\n            return {\r\n                state,\r\n                movies: action.payload,\r\n            };\r\n        case 'SET_LOADING':\r\n            return {\r\n                ...state,\r\n                loading: action.payload,\r\n            };\r\n        case 'SET_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default reducer;\r\n","export const setActor = (payload) => ({\r\n    type: 'SET_ACTOR',\r\n    payload,\r\n});\r\n\r\nexport const setLoading = (payload) => ({\r\n    type: 'SET_LOADING',\r\n    payload,\r\n});\r\n\r\nexport const setError = (payload) => ({\r\n    type: 'SET_ERROR',\r\n    payload,\r\n});\r\n\r\nexport const deserializeActor = (payload) => ({\r\n    type: 'DESERIALIZE_ACTOR',\r\n    payload,\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Upload, message, Progress, Spin } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport { setLoading } from '../actions';\r\n\r\nconst API_URL = 'https://whois.nomada.cloud/upload';\r\nconst API_KEY = 'OTdiMzQ5MjgtOTI5Ni00M2YwLWI0MDgtYmM4OTViMzQwYzJj';\r\n\r\nconst Dropzone = ({ loading, setLoading }) => {\r\n\r\n  const { Dragger } = Upload;\r\n  const history = useHistory();\r\n\r\n  const handleChange = (info) => {\r\n    const { status } = info.file;\r\n    if (status !== 'uploading') {\r\n      setLoading(true);\r\n    }\r\n    if (status === 'done') {\r\n      if (info.file.response.error) {\r\n        message.error(info.file.response.error);\r\n      } else {\r\n        history.push(`/Actor/${info.file.response.actorName}`);\r\n      }\r\n      setLoading(false);\r\n    } else if (status === 'error') {\r\n      message.error(`El archivo ${info.file.name} falló en su envío, intente nuevamente.`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const draggerProps = {\r\n    name: 'file',\r\n    accept: '.jpg,.png',\r\n    multiple: false,\r\n    action: API_URL,\r\n    headers: {\r\n      Nomada: API_KEY,\r\n    },\r\n    progress: (<Progress\r\n      strokeColor={{\r\n        from: '#108ee9',\r\n        to: '#87d068',\r\n      }}\r\n      percent={99.9}\r\n      status='active'\r\n    />),\r\n    onChange: handleChange,\r\n  };\r\n\r\n  return (\r\n    // eslint-disable-next-line react/jsx-props-no-spreading\r\n    <Dragger {...draggerProps}>\r\n      <p className='ant-upload-drag-icon'>\r\n        <InboxOutlined />\r\n      </p>\r\n      {loading ? (<Spin size='large' />) : (\r\n        <>\r\n          <p className='ant-upload-text'>Haz click o arrastra una imagen</p>\r\n          <p className='ant-upload-hint'>\r\n            Selecciona la foto de un actor famoso para conocer quien es y\r\n            en qué peliculas ha salido.\r\n          </p>\r\n        </>\r\n      )}\r\n    </Dragger>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setLoading,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dropzone);\r\n","import React from 'react';\r\nimport Dropzone from '../components/Dropzone';\r\nimport '../assets/styles/pages/Home.css';\r\n\r\nconst Home = () => (\r\n  <div className='home'>\r\n    <div className='home__container'>\r\n      <div className='home__container--title'>\r\n        <h1>¿Quién es este actor?</h1>\r\n      </div>\r\n      <div className='home__container--content'>\r\n        <Dropzone />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Card, Image } from 'antd';\r\nimport '../assets/styles/components/ActorCard.css';\r\n\r\nconst BASE_URL_IMAGES = 'https://image.tmdb.org/t/p/w500';\r\n\r\nconst ActorCard = ({ name, cover, gender, rating }) => {\r\n    return (\r\n      <Card\r\n        cover={(\r\n          <Image\r\n            width='100%'\r\n            height='36.5vh'\r\n            src={BASE_URL_IMAGES + cover}\r\n          />\r\n        )}\r\n        title={name}\r\n        bodyStyle={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-around',\r\n        }}\r\n        headStyle={{\r\n          fontSize: '18px',\r\n          fontWeight: '700',\r\n          textAlign: 'center',\r\n        }}\r\n        style={{ maxHeight: '60vh' }}\r\n      >\r\n        <p className='actor--gender'>{gender === 2 ? 'Hombre' : 'Mujer'}</p>\r\n        <p className='actor--rating'>\r\n          Popularidad:\r\n          {` ${rating}`}\r\n        </p>\r\n      </Card>\r\n    );\r\n};\r\n\r\nexport default ActorCard;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button } from 'antd';\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\n\r\nconst GoBackButton = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    history.goBack();\r\n  };\r\n    return (\r\n      <Button\r\n        type='primary'\r\n        icon={<ArrowLeftOutlined />}\r\n        onClick={handleClick}\r\n      >\r\n        Regresar\r\n      </Button>\r\n    );\r\n};\r\n\r\nexport default GoBackButton;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Card, Image, Rate } from 'antd';\r\nimport '../assets/styles/components/MovieCard.css';\r\n\r\nconst BASE_URL_IMAGES = 'https://image.tmdb.org/t/p/original';\r\n\r\nconst MovieCard = ({ id, movies }) => {\r\n\r\n  console.log(movies);\r\n  const { title, overview } = movies[id];\r\n\r\n  const cover = movies[id].poster_path;\r\n  const date = movies[id].release_date;\r\n  const grade = movies[id].vote_average;\r\n\r\n  const newGrade = Math.round((grade / 2) * 10) / 10;\r\n\r\n  return (\r\n    <Card\r\n      type='inner'\r\n      title={title}\r\n      extra={(\r\n        <p>\r\n          {`${newGrade}/5 `}\r\n          <Rate disabled allowHalf defaultValue={newGrade} />\r\n        </p>\r\n          )}\r\n      headStyle={{ fontWeight: 700, fontSize: '28px' }}\r\n    >\r\n      <div className='movie__container'>\r\n        <div className='movie__container--image'>\r\n          <Image\r\n            width='100%'\r\n            height='100%'\r\n            src={BASE_URL_IMAGES + cover}\r\n          />\r\n        </div>\r\n        <div className='movie__container--about'>\r\n          <p className='overview'>\r\n            {overview}\r\n          </p>\r\n          <p className='date'>\r\n            {`Fecha de estreno: ${new Date(date).toLocaleDateString()}`}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    movies: state.movies,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(MovieCard);\r\n","/* eslint-disable no-param-reassign */\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Spin } from 'antd';\r\nimport { setLoading, setError, deserializeActor } from '../actions';\r\nimport ActorCard from '../components/ActorCard';\r\nimport GoBackButton from '../components/GoBackButton';\r\nimport MovieCard from '../components/MovieCard';\r\nimport '../assets/styles/pages/Actor.css';\r\n\r\nconst API_KEY = '77051be82ce0b4a1d97fda8ad51b39dd';\r\nconst API_URL = `https://api.themoviedb.org/3/search/person?api_key=${API_KEY}&language=es`;\r\n\r\nconst Actor = ({ actor, error, loading, setLoading, setError, deserializeActor }) => {\r\n  const { name } = useParams();\r\n\r\n  const hasActor = actor !== null && Object.keys(actor).length > 0;\r\n\r\n  const fetchActor = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${API_URL}&query=${name}`);\r\n      const data = await response.json();\r\n      deserializeActor(data.results[0]);\r\n    } catch (error) {\r\n      setError(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchActor();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Spin size='large' />\r\n    );\r\n  }\r\n  if (error) {\r\n    return (<p>{error.message}</p>);\r\n  }\r\n  return (\r\n    <div className='actor__container'>\r\n      <div className='actor__container--header'>\r\n        <GoBackButton />\r\n      </div>\r\n      <div className='actor__container--content'>\r\n        {hasActor && (\r\n          <>\r\n            <div className='actor__about'>\r\n              <ActorCard\r\n                name={actor.name}\r\n                cover={actor.profile_path}\r\n                gender={actor.gender}\r\n                rating={actor.popularity}\r\n              />\r\n            </div>\r\n            <div className='actor__movies'>\r\n              <div className='actor__movies--header'>\r\n                <h1>Películas:</h1>\r\n              </div>\r\n              <div className='actor__movies--content'>\r\n                {actor.known_for.map((id) => (\r\n                  <MovieCard\r\n                    key={id}\r\n                    id={id}\r\n                  />\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    actor: state.current_actor_id ? state.actor[state.current_actor_id] : state.actor,\r\n    loading: state.loading,\r\n    error: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deserializeActor,\r\n  setLoading,\r\n  setError,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Actor);\r\n","import React from 'react';\r\nimport { ExclamationCircleTwoTone, MehTwoTone } from '@ant-design/icons';\r\nimport GoBackButton from '../components/GoBackButton';\r\nimport '../assets/styles/pages/NotFound.css';\r\n\r\nconst iconProps = {\r\n  fill: 'currentColor',\r\n  fontSize: '48px',\r\n  margin: '0 10px',\r\n};\r\n\r\nconst NotFound = () => (\r\n  <div className='notfound__container'>\r\n    <div className='notfound__container--header'>\r\n      <GoBackButton />\r\n    </div>\r\n    <div className='notfound__container--content'>\r\n      <ExclamationCircleTwoTone style={iconProps} />\r\n      <MehTwoTone style={iconProps} />\r\n      <h1>Pagina no encontrada</h1>\r\n      <MehTwoTone style={iconProps} />\r\n      <ExclamationCircleTwoTone style={iconProps} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\r\nimport { Layout, Menu, Divider } from 'antd';\r\nimport Home from '../pages/Home';\r\nimport Actor from '../pages/Actor';\r\nimport NotFound from '../pages/NotFound';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst App = () => (\r\n  <BrowserRouter>\r\n    <Layout className='layout' style={{ minHeight: '100vh' }}>\r\n      <Header>\r\n        <Menu theme='dark' mode='horizontal' defaultSelectedKeys={['2']}>\r\n          <Menu.Item key='Home'>\r\n            <Link to='/'>¿Quién es este actor?</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n      <Content style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route exact path='/Actor/:name' component={Actor} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </Content>\r\n      <Footer style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        }}\r\n      >\r\n        <p>Alan Diaz Yañez</p>\r\n        <Divider type='vertical' />\r\n        <p>\r\n          Github:\r\n          <a href='https://github.com/Alarmedgogeta'>@Alarmedgogeta</a>\r\n        </p>\r\n      </Footer>\r\n    </Layout>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers';\nimport App from './routes/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nconst initialState = {\n  actor: {},\n  movies: {},\n  loading: false,\n  error: null,\n  current_actor_id: '',\n};\n\nconst store = createStore(reducer, initialState);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}